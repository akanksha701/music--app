"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./Redux/features/user/userSlice.ts":
/*!******************************************!*\
  !*** ./Redux/features/user/userSlice.ts ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"(app-pages-browser)/./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n\n// export const fetchUsers: any = createAsyncThunk(\n//   'users/updatedUserDetails',\n//   async(body: any, thunkApi) => {\n//     const response = await fetch('/api/user', {\n//       method: 'POST',\n//       body,\n//     });\n//     const data = await response.json();\n//     if (data?.status === 200) {\n//       toast.success('profile updated successfully!');\n//     }\n//     return data;\n//   }\n// );\nconst initialState = {\n    userDetails: {},\n    loading: false,\n    value: 10\n};\nconst userSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: 'users',\n    initialState,\n    reducers: {}\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (userSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL1JlZHV4L2ZlYXR1cmVzL3VzZXIvdXNlclNsaWNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlFO0FBRWpFLG1EQUFtRDtBQUNuRCxnQ0FBZ0M7QUFDaEMsb0NBQW9DO0FBQ3BDLGtEQUFrRDtBQUNsRCx3QkFBd0I7QUFDeEIsY0FBYztBQUNkLFVBQVU7QUFFViwwQ0FBMEM7QUFDMUMsa0NBQWtDO0FBQ2xDLHdEQUF3RDtBQUN4RCxRQUFRO0FBQ1IsbUJBQW1CO0FBQ25CLE1BQU07QUFDTixLQUFLO0FBRUwsTUFBTUMsZUFBZTtJQUNuQkMsYUFBYSxDQUFDO0lBQ2RDLFNBQVM7SUFDVEMsT0FBTztBQUNUO0FBRUEsTUFBTUMsWUFBZ0JMLDZEQUFXQSxDQUFDO0lBQ2hDTSxNQUFNO0lBQ05MO0lBQ0FNLFVBQVUsQ0FBQztBQVViO0FBRUEsaUVBQWVGLFVBQVVHLE9BQU8sRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL2FrYW5rc2hhL0Rlc2t0b3AvbXVzaWMtLWFwcC9SZWR1eC9mZWF0dXJlcy91c2VyL3VzZXJTbGljZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTbGljZSwgY3JlYXRlQXN5bmNUaHVuayB9IGZyb20gJ0ByZWR1eGpzL3Rvb2xraXQnO1xuaW1wb3J0IHRvYXN0IGZyb20gJ3JlYWN0LWhvdC10b2FzdCc7XG4vLyBleHBvcnQgY29uc3QgZmV0Y2hVc2VyczogYW55ID0gY3JlYXRlQXN5bmNUaHVuayhcbi8vICAgJ3VzZXJzL3VwZGF0ZWRVc2VyRGV0YWlscycsXG4vLyAgIGFzeW5jKGJvZHk6IGFueSwgdGh1bmtBcGkpID0+IHtcbi8vICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL3VzZXInLCB7XG4vLyAgICAgICBtZXRob2Q6ICdQT1NUJyxcbi8vICAgICAgIGJvZHksXG4vLyAgICAgfSk7XG5cbi8vICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuLy8gICAgIGlmIChkYXRhPy5zdGF0dXMgPT09IDIwMCkge1xuLy8gICAgICAgdG9hc3Quc3VjY2VzcygncHJvZmlsZSB1cGRhdGVkIHN1Y2Nlc3NmdWxseSEnKTtcbi8vICAgICB9XG4vLyAgICAgcmV0dXJuIGRhdGE7XG4vLyAgIH1cbi8vICk7XG5cbmNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcbiAgdXNlckRldGFpbHM6IHt9LFxuICBsb2FkaW5nOiBmYWxzZSxcbiAgdmFsdWU6IDEwLFxufTtcblxuY29uc3QgdXNlclNsaWNlOmFueSA9IGNyZWF0ZVNsaWNlKHtcbiAgbmFtZTogJ3VzZXJzJyxcbiAgaW5pdGlhbFN0YXRlLFxuICByZWR1Y2Vyczoge30sXG4gIC8vIGV4dHJhUmVkdWNlcnM6IChidWlsZGVyKSA9PiB7XG4gIC8vICAgYnVpbGRlci5hZGRDYXNlKGZldGNoVXNlcnMuZnVsZmlsbGVkLCAoc3RhdGU6IGFueSwgYWN0aW9uOiBhbnkpID0+IHtcbiAgLy8gICAgIHN0YXRlLmxvYWRpbmcgPSBmYWxzZTtcbiAgLy8gICAgIHN0YXRlLnVzZXJEZXRhaWxzID0gYWN0aW9uLnBheWxvYWQudXBkYXRlZFVzZXJEZXRhaWxzO1xuICAvLyAgIH0pO1xuICAvLyAgIGJ1aWxkZXIuYWRkQ2FzZShmZXRjaFVzZXJzLnBlbmRpbmcsIChzdGF0ZSwgYWN0aW9uKSA9PiB7XG4gIC8vICAgICBzdGF0ZS5sb2FkaW5nID0gdHJ1ZTtcbiAgLy8gICB9KTtcbiAgLy8gfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCB1c2VyU2xpY2UucmVkdWNlcjtcbiJdLCJuYW1lcyI6WyJjcmVhdGVTbGljZSIsImluaXRpYWxTdGF0ZSIsInVzZXJEZXRhaWxzIiwibG9hZGluZyIsInZhbHVlIiwidXNlclNsaWNlIiwibmFtZSIsInJlZHVjZXJzIiwicmVkdWNlciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./Redux/features/user/userSlice.ts\n"));

/***/ })

});